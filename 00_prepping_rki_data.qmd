---
title: "Preparing RKI COVID-19 Weekly Data for the microsimulation"
date: last-modified
format:
  html:
    toc: true
    number-sections: true
    code-fold: show 
    code-fold-show: true
    code-summary: "Hide code"    
    code-tools: true
    theme: cosmo
---

# Overview
This document processes weekly COVID-19 surveillance data from the Robert Koch Institute (RKI) for use in microsimulation models. It combines weekly incidence data for males and females from 2020â€“2021, cleans and standardizes the format, and outputs incidence values stratified by age and sex.

# Data Source
All incidence data were obtained from RKI's SurvStat@RKI 2.0 portal: > **Robert Koch Institute**: *SurvStat@RKI 2.0*, https://survstat.rki.de

# Code to process the data

## Initial set-up

Loading libraries, setting template data structure and paths to files. Below is the list of weekly files that will be processed.
```{r initial set-up, message = FALSE, warning = FALSE}
# loading libraries
library(ISOweek)
library(here)
library(readr)
library(DT)
library(lubridate)
library(stringr)
library(purrr)
library(dplyr)

# setting path to files
weekly_path <- here("data", "weekly")

# Constructing a template for the data structure, since not all weekly files
# have the same age groups
template_cols <- c("Sex", 
                   paste0("A", sprintf("%02d", 0:79)), #gives A00:A79
                   "A80+" )

# listing all weekly files in the folder
weekly_files <- list.files(
  weekly_path,
  pattern    = "^SurvStat_\\d{4}_\\d{2}\\.csv$",
  full.names = TRUE
)

datatable(
  data.frame(File = basename(weekly_files)),
  options = list(pageLength = 10, lengthMenu = c(10, 25, 50, 105),
                 searching = FALSE,
                 info      = FALSE),
  rownames = FALSE
)
```

## Making a function to load the data

This function loads the data, cleans the variable names, and extracts the year and week from the filename. 

```{r function to read data}
# creating a function to load and process the files
read_data <- function(path) {
  # read the file
  # skipping the first row, which just has a header
  df <- suppressMessages(
    read_delim(
      path,
      delim   = "\t",           
      locale  = locale(encoding = "UTF-16LE"),  
      trim_ws = TRUE,
      name_repair    = "unique_quiet",
      skip = 1
    ) 
  )
  
  # cleaning variable names
  df <- df %>%
    rename(Sex = 1) %>%
    rename_with(~ substr(.x, 1, 3), -Sex)

  # extract Year and Week from filename
  parts <- str_match(basename(path), "SurvStat_(\\d{4})_(\\d{2})\\.csv")[,2:3]
  
  # returning df with Year and Week added
  df %>%
    mutate(
      Year = as.integer(parts[1]),
      Week = as.integer(parts[2])
    )
}
```

## Loading and processing data

After processing the data I get a data set with the structure of the one shown below

```{r loading and processing data}
# loading in the data
all_weeks <- weekly_files %>%
  set_names() %>%            
  map_dfr(
    read_data,
    .id = "file") 

# renaming one of the columns, and then rearranging the order
all_weeks <- all_weeks %>%
  rename("A80+" = "A80") %>%
  select(Year, Week, all_of(template_cols)) 

# in a few weeks early in 2020 there is no data for females, so 
# I am adding these rows manually
missing_fem <- expand.grid(
  Year = 2020,
  Week = c(1:4, 7),
  Sex  = "female"
)

# converting one week (period of data) into a year
week_in_years <- 1 / 52

# adding the missing female rows and converting all NA to 0
# the incidence rates are number of new cases per 100,000 people during 
# a week. I'm converting this to a rate 
complete_data <- all_weeks %>%
  bind_rows(missing_fem) %>%
  arrange(Year, Week) %>%
  mutate(across(4:last_col(), ~ if_else(is.na(.), 0, .))) %>%
  mutate(across(4:last_col(), 
                ~ -log(1- (. / 100000))/
                  week_in_years)) 

# adding variables to represent the start and end of the week
complete_data <- complete_data %>%
  mutate(iso_wk1   = sprintf("%04d-W%02d-1", Year, Week),
         iso_wk7   = sprintf("%04d-W%02d-7", Year, Week),
         week_start = ISOweek2date(iso_wk1),
         week_start_num  = decimal_date(week_start),
         week_end = ISOweek2date(iso_wk7),
         week_end_num  = decimal_date(week_end)
  ) %>%
  select(!c(iso_wk1, iso_wk7)) %>%
  relocate(week_start:last_col(), .after = Week) 

# extracting data for males and females
complete_m <- complete_data %>%
  filter(Sex == "male") %>%
  select(week_end_num, "A00":last_col())

complete_f <- complete_data %>%
  filter(Sex == "female") %>%
  select(week_end_num, "A00":last_col())

# print example of what data looks like
datatable(
  complete_data %>% 
    filter(Year == 2021),
  options = list(
    pageLength = 10, lengthMenu = c(10, 25, 50, 105),
    searching = FALSE,
    scrollX  = TRUE,
    info      = FALSE
  ),
  rownames = FALSE
)
```


```{r exporting data}
# exporting data
write_csv(complete_data, file = here("data", "SurvStat_complete_data.csv"))
write_csv(complete_m, file = here("data", "SurvStat_male_data.csv"))
write_csv(complete_f, file = here("data", "SurvStat_female_data.csv"))
```

## Reproducibility

```{r session-info}
sessionInfo()
```
